(()=>{"use strict";function e(e,t,r){return{configurable:!0,get(){return r.value.bind(this)}}}class t{constructor(e,t,r,s="beforeend"){this.template=document.getElementById(e),this.container=document.getElementById(t),this.element=document.importNode(this.template.content,!0).firstElementChild,r&&(this.element.id=r),this.container.insertAdjacentElement(s,this.element)}}var r;!function(e){e[e.Active=0]="Active",e[e.Finished=1]="Finished"}(r||(r={}));class s{constructor(e,t,r,s,i){this.id=e,this.title=t,this.description=r,this.people=s,this.status=i}}class i{constructor(){this.listeners=[],this.projects=[]}static getInstance(){return this.instance||(this.instance=new i),this.instance}listener(e){this.listeners.push(e)}add(e,t,i){const n=new s(Math.random().toString(),e,t,i,r.Active);this.projects.push(n),this.listen()}update(e,t){const r=this.projects.find((t=>t.id===e));r&&r.status!==t&&(r.status=t,this.listen())}listen(){for(const e of this.listeners)e(this.projects.slice())}}const n=i.getInstance();class o extends t{constructor(e){super("project-item",e.status===r.Active?"active-projects":"finished-projects"),this.project=e,this.configure()}get people(){return 1===this.project.people?"1 Person":`${this.project.people} People`}configure(){this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler),this.element.querySelector("h2").textContent=this.project.title,this.element.querySelector("h3").textContent=this.people,this.element.querySelector("p").textContent=this.project.description}dragStartHandler(e){e.dataTransfer&&(e.dataTransfer.setData("text/plain",this.project.id),e.dataTransfer.effectAllowed="move")}dragEndHandler(e){console.log(e)}}!function(e,t,r,s){var i,n=arguments.length,o=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(o=(n<3?i(o):n>3?i(t,r,o):i(t,r))||o);n>3&&o&&Object.defineProperty(t,r,o)}([e],o.prototype,"dragStartHandler",null);var a=function(e,t,r,s){var i,n=arguments.length,o=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(o=(n<3?i(o):n>3?i(t,r,o):i(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o};class l extends t{constructor(e){super("projects-container","app",`${e}-projects-container`),this.type=e,this.projects=[],this.configure(),this.element.querySelector("h2").innerText=`${e.toUpperCase()} PROJECTS`}dropHandler(e){if(e.dataTransfer){const t=e.dataTransfer.getData("text/plain");n.update(t,"active"===this.type?r.Active:r.Finished)}}dragOverHandler(e){e.dataTransfer&&"text/plain"===e.dataTransfer.types[0]&&(e.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))}dragLeaveHandler(e){this.element.querySelector("ul").classList.remove("droppable")}configure(){this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("drop",this.dropHandler),n.listener((e=>{this.projects=e.filter((e=>"active"===this.type?e.status===r.Active:e.status===r.Finished));const t=document.querySelector(`#${this.type}-projects-container ul`);t.id=`${this.type}-projects`,t.innerHTML="";for(const e of this.projects)new o(e)}))}}a([e],l.prototype,"dropHandler",null),a([e],l.prototype,"dragOverHandler",null),a([e],l.prototype,"dragLeaveHandler",null);class c{constructor(){this.data={},this.rules={}}make(e,t){return this.data=e,this.rules=t,this}fails(){let e=!1;return Object.keys(this.data).forEach((t=>{this.rules[t]&&this.rules[t].split("|").forEach((r=>{if(r.includes(":")){const[s,i]=r.split(":");this[s]&&!1===this[s](this.data[t],+i)&&(e=!0)}this[r]&&!1===this[r](this.data[t])&&(e=!0)}))})),e}required(e){return e.length>0}min(e,t){return"string"==typeof e?e.length>=t:e>=t}max(e,t){return"string"==typeof e?e.length<=t:e<=t}}class d extends t{constructor(){super("form-template","app","project-form"),this.configure(),this.title=this.element.querySelector("#title"),this.description=this.element.querySelector("#description"),this.people=this.element.querySelector("#people")}configure(){this.element.addEventListener("submit",this.submit)}submit(e){e.preventDefault();const t=new c,r={title:this.title.value,description:this.description.value,people:this.people.value};t.make(r,{title:"required|max:10",description:"required|min:10|max:50",people:"required|max:5"}),t.fails()?alert("This given data is invalid"):(n.add(r.title,r.description,parseInt(r.people)),this.reset())}reset(){this.title.value="",this.description.value="",this.people.value=""}}(function(e,t,r,s){var i,n=arguments.length,o=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(o=(n<3?i(o):n>3?i(t,r,o):i(t,r))||o);n>3&&o&&Object.defineProperty(t,r,o)})([e],d.prototype,"configure",null),new d,new l("active"),new l("finished")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dEIsTUFDOUJ1QixPQUFRckIsS0FBS3FCLE9BQU92QixPQUd0QmtHLEVBQVVuQixLQUFLRixFQUFNLENBQ25CeEQsTUFBTyxrQkFDUEMsWUFBYSx5QkFDYkMsT0FBUSxtQkFHTjJFLEVBQVVsQixRQUNabUIsTUFBTSwrQkFFTnZELEVBQWFYLElBQUk0QyxFQUFLeEQsTUFBT3dELEVBQUt2RCxZQUFhOEUsU0FBU3ZCLEVBQUt0RCxTQUM3RHJCLEtBQUttRyxTQUlEQSxRQUNObkcsS0FBS21CLE1BQU1yQixNQUFRLEdBQ25CRSxLQUFLb0IsWUFBWXRCLE1BQVEsR0FDekJFLEtBQUtxQixPQUFPdkIsTUFBUSxLLDJUQWhDdEIsRUFEQ04sRyw4QkNyQkgsSUFBSXFHLEVBQ0osSUFBSW5DLEVBQWlCLFVBQ3JCLElBQUlBLEVBQWlCLGEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBlc2NyaXB0LWRyYWctYW5kLWRyb3AvLi9zcmMvZGVjb3JhdG9ycy9hdXRvYmluZC50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LWRyYWctYW5kLWRyb3AvLi9zcmMvY29tcG9uZW50cy9iYXNlLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtZHJhZy1hbmQtZHJvcC8uL3NyYy9zdGF0ZS9wcm9qZWN0LnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtZHJhZy1hbmQtZHJvcC8uL3NyYy9jb21wb25lbnRzL3Byb2plY3QtaXRlbS50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LWRyYWctYW5kLWRyb3AvLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0LWNvbnRhaW5lci50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LWRyYWctYW5kLWRyb3AvLi9zcmMvdXRpbHMvdmFsaWRhdG9yLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtZHJhZy1hbmQtZHJvcC8uL3NyYy9jb21wb25lbnRzL3Byb2plY3QtZm9ybS50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LWRyYWctYW5kLWRyb3AvLi9zcmMvYXBwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhdXRvYmluZChcbiAgdGFyZ2V0OiBhbnksXG4gIHByb3BlcnR5S2V5OiBzdHJpbmcsXG4gIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvclxuKSB7XG4gIHJldHVybiB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJldHVybiBkZXNjcmlwdG9yLnZhbHVlLmJpbmQodGhpcyk7XG4gICAgfSxcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIENvbXBvbmVudDxUIGV4dGVuZHMgSFRNTEVsZW1lbnQsIFUgZXh0ZW5kcyBIVE1MRWxlbWVudD4ge1xuICB0ZW1wbGF0ZTogSFRNTFRlbXBsYXRlRWxlbWVudDtcbiAgY29udGFpbmVyOiBUO1xuICBlbGVtZW50OiBVO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHRlbXBsYXRlSWQ6IHN0cmluZyxcbiAgICBjb250YWluZXJJZDogc3RyaW5nLFxuICAgIGVsZW1lbnRJZD86IHN0cmluZyxcbiAgICB3aGVyZTogSW5zZXJ0UG9zaXRpb24gPSBcImJlZm9yZWVuZFwiXG4gICkge1xuICAgIHRoaXMudGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZW1wbGF0ZUlkKSEgYXMgSFRNTFRlbXBsYXRlRWxlbWVudDtcblxuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29udGFpbmVySWQpISBhcyBUO1xuXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0aGlzLnRlbXBsYXRlLmNvbnRlbnQsIHRydWUpXG4gICAgICAuZmlyc3RFbGVtZW50Q2hpbGQgYXMgVTtcblxuICAgIGlmIChlbGVtZW50SWQpIHRoaXMuZWxlbWVudC5pZCA9IGVsZW1lbnRJZDtcblxuICAgIHRoaXMuY29udGFpbmVyLmluc2VydEFkamFjZW50RWxlbWVudCh3aGVyZSwgdGhpcy5lbGVtZW50KTtcbiAgfVxuXG4gIGFic3RyYWN0IGNvbmZpZ3VyZSgpOiB2b2lkO1xufVxuIiwiZXhwb3J0IGVudW0gUHJvamVjdFN0YXR1cyB7XG4gIEFjdGl2ZSxcbiAgRmluaXNoZWQsXG59XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGlkOiBzdHJpbmcsXG4gICAgcHVibGljIHRpdGxlOiBzdHJpbmcsXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgcHVibGljIHBlb3BsZTogbnVtYmVyLFxuICAgIHB1YmxpYyBzdGF0dXM6IFByb2plY3RTdGF0dXNcbiAgKSB7fVxufVxuXG50eXBlIFByb2plY3RMaXN0ZW5lciA9IChwcm9qZWN0czogUHJvamVjdFtdKSA9PiB2b2lkO1xuXG5jbGFzcyBQcm9qZWN0U3RhdGUge1xuICBwcml2YXRlIGxpc3RlbmVyczogUHJvamVjdExpc3RlbmVyW10gPSBbXTtcbiAgcHJvamVjdHM6IFByb2plY3RbXSA9IFtdO1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogUHJvamVjdFN0YXRlO1xuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge31cblxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgaWYgKCF0aGlzLmluc3RhbmNlKSB0aGlzLmluc3RhbmNlID0gbmV3IFByb2plY3RTdGF0ZSgpO1xuXG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XG4gIH1cblxuICBsaXN0ZW5lcihmbjogUHJvamVjdExpc3RlbmVyKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMucHVzaChmbik7XG4gIH1cblxuICBhZGQodGl0bGU6IHN0cmluZywgZGVzY3JpcHRpb246IHN0cmluZywgcGVvcGxlOiBudW1iZXIpIHtcbiAgICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QoXG4gICAgICBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKCksXG4gICAgICB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgcGVvcGxlLFxuICAgICAgUHJvamVjdFN0YXR1cy5BY3RpdmVcbiAgICApO1xuXG4gICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xuXG4gICAgdGhpcy5saXN0ZW4oKTtcbiAgfVxuXG4gIHVwZGF0ZShwcm9qZWN0SWQ6IHN0cmluZywgc3RhdHVzOiBQcm9qZWN0U3RhdHVzKSB7XG4gICAgY29uc3QgcHJvamVjdCA9IHRoaXMucHJvamVjdHMuZmluZCgocHJvamVjdCkgPT4gcHJvamVjdC5pZCA9PT0gcHJvamVjdElkKTtcblxuICAgIGlmIChwcm9qZWN0ICYmIHByb2plY3Quc3RhdHVzICE9PSBzdGF0dXMpIHtcbiAgICAgIHByb2plY3Quc3RhdHVzID0gc3RhdHVzO1xuXG4gICAgICB0aGlzLmxpc3RlbigpO1xuICAgIH1cbiAgfVxuXG4gIGxpc3RlbigpIHtcbiAgICBmb3IgKGNvbnN0IGxpc3RlbmVyIG9mIHRoaXMubGlzdGVuZXJzKSB7XG4gICAgICBsaXN0ZW5lcih0aGlzLnByb2plY3RzLnNsaWNlKCkpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcHJvamVjdFN0YXRlID0gUHJvamVjdFN0YXRlLmdldEluc3RhbmNlKCk7XG4iLCJpbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuL2Jhc2VcIjtcbmltcG9ydCB7IERyYWdnYWJsZSB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL2RyYWdnYWJsZVwiO1xuaW1wb3J0IHsgYXV0b2JpbmQgfSBmcm9tIFwiLi4vZGVjb3JhdG9ycy9hdXRvYmluZFwiO1xuaW1wb3J0IHsgUHJvamVjdCwgUHJvamVjdFN0YXR1cyB9IGZyb20gXCIuLi9zdGF0ZS9wcm9qZWN0XCI7XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0SXRlbVxuICBleHRlbmRzIENvbXBvbmVudDxIVE1MVUxpc3RFbGVtZW50LCBIVE1MTElFbGVtZW50PlxuICBpbXBsZW1lbnRzIERyYWdnYWJsZVxue1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb2plY3Q6IFByb2plY3QpIHtcbiAgICBjb25zdCBjb250YWluZXJJZCA9XG4gICAgICBwcm9qZWN0LnN0YXR1cyA9PT0gUHJvamVjdFN0YXR1cy5BY3RpdmVcbiAgICAgICAgPyBcImFjdGl2ZS1wcm9qZWN0c1wiXG4gICAgICAgIDogXCJmaW5pc2hlZC1wcm9qZWN0c1wiO1xuXG4gICAgc3VwZXIoXCJwcm9qZWN0LWl0ZW1cIiwgY29udGFpbmVySWQpO1xuXG4gICAgdGhpcy5jb25maWd1cmUoKTtcbiAgfVxuXG4gIGdldCBwZW9wbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvamVjdC5wZW9wbGUgPT09IDFcbiAgICAgID8gXCIxIFBlcnNvblwiXG4gICAgICA6IGAke3RoaXMucHJvamVjdC5wZW9wbGV9IFBlb3BsZWA7XG4gIH1cblxuICBjb25maWd1cmUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnc3RhcnRcIiwgdGhpcy5kcmFnU3RhcnRIYW5kbGVyKTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbmRcIiwgdGhpcy5kcmFnRW5kSGFuZGxlcik7XG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKSEudGV4dENvbnRlbnQgPSB0aGlzLnByb2plY3QudGl0bGU7XG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoM1wiKSEudGV4dENvbnRlbnQgPSB0aGlzLnBlb3BsZTtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcInBcIikhLnRleHRDb250ZW50ID0gdGhpcy5wcm9qZWN0LmRlc2NyaXB0aW9uO1xuICB9XG5cbiAgQGF1dG9iaW5kXG4gIGRyYWdTdGFydEhhbmRsZXIoZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQge1xuICAgIGlmIChldmVudC5kYXRhVHJhbnNmZXIpIHtcbiAgICAgIGV2ZW50LmRhdGFUcmFuc2Zlci5zZXREYXRhKFwidGV4dC9wbGFpblwiLCB0aGlzLnByb2plY3QuaWQpO1xuICAgICAgZXZlbnQuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSBcIm1vdmVcIjtcbiAgICB9XG4gIH1cblxuICBkcmFnRW5kSGFuZGxlcihldmVudDogRHJhZ0V2ZW50KTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coZXZlbnQpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBhdXRvYmluZCB9IGZyb20gXCIuLi9kZWNvcmF0b3JzL2F1dG9iaW5kXCI7XG5pbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuL2Jhc2VcIjtcbmltcG9ydCB7IERyb3BwYWJsZSB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL2Ryb3BwYWJsZVwiO1xuaW1wb3J0IHsgUHJvamVjdEl0ZW0gfSBmcm9tIFwiLi9wcm9qZWN0LWl0ZW1cIjtcbmltcG9ydCB7IFByb2plY3QsIHByb2plY3RTdGF0ZSwgUHJvamVjdFN0YXR1cyB9IGZyb20gXCIuLi9zdGF0ZS9wcm9qZWN0XCI7XG5cbmV4cG9ydCBjbGFzcyBQcm9qZWN0Q29udGFpbmVyXG4gIGV4dGVuZHMgQ29tcG9uZW50PEhUTUxEaXZFbGVtZW50LCBIVE1MRWxlbWVudD5cbiAgaW1wbGVtZW50cyBEcm9wcGFibGVcbntcbiAgcHJvamVjdHM6IFByb2plY3RbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdHlwZTogXCJhY3RpdmVcIiB8IFwiZmluaXNoZWRcIikge1xuICAgIHN1cGVyKFwicHJvamVjdHMtY29udGFpbmVyXCIsIFwiYXBwXCIsIGAke3R5cGV9LXByb2plY3RzLWNvbnRhaW5lcmApO1xuXG4gICAgdGhpcy5jb25maWd1cmUoKTtcblxuICAgIGNvbnN0IGhlYWRlciA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiaDJcIikhIGFzIEhUTUxIZWFkRWxlbWVudDtcbiAgICBoZWFkZXIuaW5uZXJUZXh0ID0gYCR7dHlwZS50b1VwcGVyQ2FzZSgpfSBQUk9KRUNUU2A7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgZHJvcEhhbmRsZXIoZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQge1xuICAgIGlmIChldmVudC5kYXRhVHJhbnNmZXIpIHtcbiAgICAgIGNvbnN0IHByb2plY3RJZCA9IGV2ZW50LmRhdGFUcmFuc2Zlci5nZXREYXRhKFwidGV4dC9wbGFpblwiKTtcbiAgICAgIHByb2plY3RTdGF0ZS51cGRhdGUoXG4gICAgICAgIHByb2plY3RJZCxcbiAgICAgICAgdGhpcy50eXBlID09PSBcImFjdGl2ZVwiID8gUHJvamVjdFN0YXR1cy5BY3RpdmUgOiBQcm9qZWN0U3RhdHVzLkZpbmlzaGVkXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIEBhdXRvYmluZFxuICBkcmFnT3ZlckhhbmRsZXIoZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQge1xuICAgIGlmIChldmVudC5kYXRhVHJhbnNmZXIgJiYgZXZlbnQuZGF0YVRyYW5zZmVyLnR5cGVzWzBdID09PSBcInRleHQvcGxhaW5cIikge1xuICAgICAgLy8gQnkgZGVmYXVsdCwgZGF0YS9lbGVtZW50cyBjYW5ub3QgYmUgZHJvcHBlZCBpbiBvdGhlciBlbGVtZW50cy5cbiAgICAgIC8vIFRvIGFsbG93IGEgZHJvcCwgd2UgbXVzdCBwcmV2ZW50IHRoZSBkZWZhdWx0IGhhbmRsaW5nIG9mIHRoZSBlbGVtZW50LlxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwidWxcIikhLmNsYXNzTGlzdC5hZGQoXCJkcm9wcGFibGVcIik7XG4gICAgfVxuICB9XG5cbiAgQGF1dG9iaW5kXG4gIGRyYWdMZWF2ZUhhbmRsZXIoZXZlbnQ6IERyYWdFdmVudCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwidWxcIikhLmNsYXNzTGlzdC5yZW1vdmUoXCJkcm9wcGFibGVcIik7XG4gIH1cblxuICBjb25maWd1cmUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnbGVhdmVcIiwgdGhpcy5kcmFnTGVhdmVIYW5kbGVyKTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIHRoaXMuZHJhZ092ZXJIYW5kbGVyKTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgdGhpcy5kcm9wSGFuZGxlcik7XG5cbiAgICBwcm9qZWN0U3RhdGUubGlzdGVuZXIoKHByb2plY3RzKSA9PiB7XG4gICAgICB0aGlzLnByb2plY3RzID0gcHJvamVjdHMuZmlsdGVyKChwcm9qZWN0KSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnR5cGUgPT09IFwiYWN0aXZlXCIpXG4gICAgICAgICAgcmV0dXJuIHByb2plY3Quc3RhdHVzID09PSBQcm9qZWN0U3RhdHVzLkFjdGl2ZTtcbiAgICAgICAgcmV0dXJuIHByb2plY3Quc3RhdHVzID09PSBQcm9qZWN0U3RhdHVzLkZpbmlzaGVkO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IHVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgYCMke3RoaXMudHlwZX0tcHJvamVjdHMtY29udGFpbmVyIHVsYFxuICAgICAgKSEgYXMgSFRNTFVMaXN0RWxlbWVudDtcbiAgICAgIHVsLmlkID0gYCR7dGhpcy50eXBlfS1wcm9qZWN0c2A7XG4gICAgICB1bC5pbm5lckhUTUwgPSBcIlwiO1xuXG4gICAgICBmb3IgKGNvbnN0IHByb2plY3Qgb2YgdGhpcy5wcm9qZWN0cykge1xuICAgICAgICBuZXcgUHJvamVjdEl0ZW0ocHJvamVjdCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0iLCJ0eXBlIFJ1bGUgPSBcInJlcXVpcmVkXCIgfCBcIm1heFwiIHwgXCJtaW5cIjtcblxudHlwZSBWYWxpZGF0YWJsZSA9IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG5cbmV4cG9ydCBjbGFzcyBWYWxpZGF0b3Ige1xuICBwcml2YXRlIGRhdGEgPSB7fSBhcyBWYWxpZGF0YWJsZTtcblxuICBwcml2YXRlIHJ1bGVzID0ge30gYXMgVmFsaWRhdGFibGU7XG5cbiAgcHVibGljIG1ha2UoZGF0YTogVmFsaWRhdGFibGUsIHJ1bGVzOiBWYWxpZGF0YWJsZSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG5cbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyBmYWlscygpIHtcbiAgICBsZXQgZmFpbHMgPSBmYWxzZTtcblxuICAgIE9iamVjdC5rZXlzKHRoaXMuZGF0YSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBpZiAodGhpcy5ydWxlc1trZXldKSB7XG4gICAgICAgIGNvbnN0IHJ1bGVzID0gdGhpcy5ydWxlc1trZXldLnNwbGl0KFwifFwiKSBhcyBSdWxlW107XG5cbiAgICAgICAgcnVsZXMuZm9yRWFjaCgocnVsZSkgPT4ge1xuICAgICAgICAgIGlmIChydWxlLmluY2x1ZGVzKFwiOlwiKSkge1xuICAgICAgICAgICAgY29uc3QgW3N0YXR1dGUsIHZhbHVlXSA9IHJ1bGUuc3BsaXQoXCI6XCIpIGFzIFtSdWxlLCBzdHJpbmddO1xuXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgIHRoaXNbc3RhdHV0ZV0gJiZcbiAgICAgICAgICAgICAgdGhpc1tzdGF0dXRlXSh0aGlzLmRhdGFba2V5XSwgK3ZhbHVlKSA9PT0gZmFsc2VcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICBmYWlscyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgdGhpc1tydWxlXSAmJlxuICAgICAgICAgICAgLyogQHRzLWlnbm9yZSAqL1xuICAgICAgICAgICAgdGhpc1tydWxlXSh0aGlzLmRhdGFba2V5XSkgPT09IGZhbHNlXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBmYWlscyA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBmYWlscztcbiAgfVxuXG4gIHByaXZhdGUgcmVxdWlyZWQodmFsdWU6IHN0cmluZykge1xuICAgIHJldHVybiB2YWx1ZS5sZW5ndGggPiAwO1xuICB9XG5cbiAgcHJpdmF0ZSBtaW4odmFsdWU6IHN0cmluZyB8IG51bWJlciwgbWluaW11bTogbnVtYmVyKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA+PSBtaW5pbXVtO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdmFsdWUgPj0gbWluaW11bTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIG1heCh2YWx1ZTogc3RyaW5nIHwgbnVtYmVyLCBtYXhpbXVtOiBudW1iZXIpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gdmFsdWUubGVuZ3RoIDw9IG1heGltdW07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB2YWx1ZSA8PSBtYXhpbXVtO1xuICAgIH1cbiAgfVxufSIsImltcG9ydCBDb21wb25lbnQgZnJvbSBcIi4vYmFzZVwiO1xuaW1wb3J0IHsgYXV0b2JpbmQgfSBmcm9tIFwiLi4vZGVjb3JhdG9ycy9hdXRvYmluZFwiO1xuaW1wb3J0IHsgcHJvamVjdFN0YXRlIH0gZnJvbSBcIi4uL3N0YXRlL3Byb2plY3RcIjtcbmltcG9ydCB7IFZhbGlkYXRvciB9IGZyb20gXCIuLi91dGlscy92YWxpZGF0b3JcIjtcblxuZXhwb3J0IGNsYXNzIFByb2plY3RGb3JtIGV4dGVuZHMgQ29tcG9uZW50PEhUTUxEaXZFbGVtZW50LCBIVE1MRm9ybUVsZW1lbnQ+IHtcbiAgdGl0bGU6IEhUTUxJbnB1dEVsZW1lbnQ7XG4gIGRlc2NyaXB0aW9uOiBIVE1MSW5wdXRFbGVtZW50O1xuICBwZW9wbGU6IEhUTUxJbnB1dEVsZW1lbnQ7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoXCJmb3JtLXRlbXBsYXRlXCIsIFwiYXBwXCIsIFwicHJvamVjdC1mb3JtXCIpO1xuXG4gICAgdGhpcy5jb25maWd1cmUoKTtcblxuICAgIHRoaXMudGl0bGUgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiN0aXRsZVwiKSBhcyBIVE1MSW5wdXRFbGVtZW50O1xuXG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIjZGVzY3JpcHRpb25cIlxuICAgICkgYXMgSFRNTElucHV0RWxlbWVudDtcblxuICAgIHRoaXMucGVvcGxlID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGVvcGxlXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgY29uZmlndXJlKCkge1xuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuc3VibWl0KTtcbiAgfVxuXG4gIHByaXZhdGUgc3VibWl0KGU6IEV2ZW50KSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IFZhbGlkYXRvcigpO1xuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLnZhbHVlLFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24udmFsdWUsXG4gICAgICBwZW9wbGU6IHRoaXMucGVvcGxlLnZhbHVlLFxuICAgIH07XG5cbiAgICB2YWxpZGF0b3IubWFrZShkYXRhLCB7XG4gICAgICB0aXRsZTogXCJyZXF1aXJlZHxtYXg6MTBcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcInJlcXVpcmVkfG1pbjoxMHxtYXg6NTBcIixcbiAgICAgIHBlb3BsZTogXCJyZXF1aXJlZHxtYXg6NVwiLFxuICAgIH0pO1xuXG4gICAgaWYgKHZhbGlkYXRvci5mYWlscygpKSB7XG4gICAgICBhbGVydChcIlRoaXMgZ2l2ZW4gZGF0YSBpcyBpbnZhbGlkXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9qZWN0U3RhdGUuYWRkKGRhdGEudGl0bGUsIGRhdGEuZGVzY3JpcHRpb24sIHBhcnNlSW50KGRhdGEucGVvcGxlKSk7XG4gICAgICB0aGlzLnJlc2V0KCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSByZXNldCgpIHtcbiAgICB0aGlzLnRpdGxlLnZhbHVlID0gXCJcIjtcbiAgICB0aGlzLmRlc2NyaXB0aW9uLnZhbHVlID0gXCJcIjtcbiAgICB0aGlzLnBlb3BsZS52YWx1ZSA9IFwiXCI7XG4gIH1cbn1cbiIsImltcG9ydCB7IFByb2plY3RDb250YWluZXIgfSBmcm9tIFwiLi9jb21wb25lbnRzL3Byb2plY3QtY29udGFpbmVyXCI7XG5pbXBvcnQgeyBQcm9qZWN0Rm9ybSB9IGZyb20gXCIuL2NvbXBvbmVudHMvcHJvamVjdC1mb3JtXCI7XG5cbm5ldyBQcm9qZWN0Rm9ybSgpO1xubmV3IFByb2plY3RDb250YWluZXIoXCJhY3RpdmVcIik7XG5uZXcgUHJvamVjdENvbnRhaW5lcihcImZpbmlzaGVkXCIpO1xuIl0sIm5hbWVzIjpbImF1dG9iaW5kIiwidGFyZ2V0IiwicHJvcGVydHlLZXkiLCJkZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwiZ2V0IiwidmFsdWUiLCJiaW5kIiwidGhpcyIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwidGVtcGxhdGVJZCIsImNvbnRhaW5lcklkIiwiZWxlbWVudElkIiwid2hlcmUiLCJ0ZW1wbGF0ZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjb250YWluZXIiLCJlbGVtZW50IiwiaW1wb3J0Tm9kZSIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImlkIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiUHJvamVjdFN0YXR1cyIsIlByb2plY3QiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwicGVvcGxlIiwic3RhdHVzIiwiUHJvamVjdFN0YXRlIiwibGlzdGVuZXJzIiwicHJvamVjdHMiLCJzdGF0aWMiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiZm4iLCJwdXNoIiwiYWRkIiwicHJvamVjdCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsIkFjdGl2ZSIsImxpc3RlbiIsInVwZGF0ZSIsInByb2plY3RJZCIsImZpbmQiLCJzbGljZSIsInByb2plY3RTdGF0ZSIsImdldEluc3RhbmNlIiwiUHJvamVjdEl0ZW0iLCJzdXBlciIsImNvbmZpZ3VyZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJkcmFnU3RhcnRIYW5kbGVyIiwiZHJhZ0VuZEhhbmRsZXIiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJldmVudCIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJlZmZlY3RBbGxvd2VkIiwiY29uc29sZSIsImxvZyIsIlByb2plY3RDb250YWluZXIiLCJ0eXBlIiwiaW5uZXJUZXh0IiwidG9VcHBlckNhc2UiLCJkcm9wSGFuZGxlciIsImdldERhdGEiLCJGaW5pc2hlZCIsImRyYWdPdmVySGFuZGxlciIsInR5cGVzIiwicHJldmVudERlZmF1bHQiLCJjbGFzc0xpc3QiLCJkcmFnTGVhdmVIYW5kbGVyIiwicmVtb3ZlIiwiZmlsdGVyIiwidWwiLCJpbm5lckhUTUwiLCJWYWxpZGF0b3IiLCJkYXRhIiwicnVsZXMiLCJtYWtlIiwiZmFpbHMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInNwbGl0IiwicnVsZSIsImluY2x1ZGVzIiwic3RhdHV0ZSIsInJlcXVpcmVkIiwibGVuZ3RoIiwibWluIiwibWluaW11bSIsIm1heCIsIm1heGltdW0iLCJQcm9qZWN0Rm9ybSIsInN1Ym1pdCIsImUiLCJ2YWxpZGF0b3IiLCJhbGVydCIsInBhcnNlSW50IiwicmVzZXQiXSwic291cmNlUm9vdCI6IiJ9